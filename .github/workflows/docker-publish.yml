name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Le pipeline se déclenche à chaque commit sur la branche `main`

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupération du code
      - name: Checkout code
        uses: actions/checkout@v2

      # Étape 2 : Connexion à Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Étape 3 : Construction de l'image Docker
      - name: Build Docker image
        run: docker build -t ton-dockerhub-username/ton-projet:latest .

      # Étape 4 : Pousser l'image vers Docker Hub
      - name: Push Docker image
        run: docker push ton-dockerhub-username/ton-projet:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Étape 1 : Connexion SSH à ton VPS
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST }}  # Ajoute cette variable dans les secrets GitHub
          username: ${{ secrets.VPS_USER }}  # Ajoute cette variable dans les secrets GitHub
          password: ${{ secrets.VPS_PASSWORD }}  # Ajoute cette variable dans les secrets GitHub
          port: 22
          script: |
            cd /chemin/vers/ton/projet  # Remplace par le chemin de ton projet sur le VPS
            docker-compose pull web  # Récupère la dernière image depuis Docker Hub
            docker-compose up -d web  # Redémarre le conteneur avec la nouvelle image
